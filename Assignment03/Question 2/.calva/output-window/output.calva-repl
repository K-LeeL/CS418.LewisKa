; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Using host:port localhost:51337 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user-activate꞉>  ; Use `alt+enter` to evaluate
clj꞉user-activate꞉> 
; Creating cljs repl session...
; Connecting cljs repl: joyride...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.cljs'
; Could not find namespace: cljs.repl.
cljs꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.



#'user/empty?
cljs꞉user꞉> 
#'user/insert
cljs꞉user꞉> 
#'user/delete
cljs꞉user꞉> 
#'user/member?
cljs꞉user꞉> 
#'user/in-order
cljs꞉user꞉> 
#'user/pre-order
cljs꞉user꞉> 
#'user/post-order
cljs꞉user꞉> 
#'user/my-tree
cljs꞉user꞉> 
Original tree:  (5 (3 (2 nil nil) (4 nil nil)) (7 nil nil))
nil
cljs꞉user꞉> 
Insert 6:  (5 (3 (2 nil nil) (4 nil nil)) (7 (6 nil nil) nil))
nil
cljs꞉user꞉> 
Delete 3:  (5 (2 (4 nil nil) (4 nil nil)) (7 nil nil))
nil
cljs꞉user꞉> 
Is 4 a member?  true
nil
cljs꞉user꞉> 
In-order traversal:  (2 3 4 5 7)
nil
cljs꞉user꞉> 
Pre-order traversal:  (5 3 2 4 7)
nil
cljs꞉user꞉> 
Post-order traversal:  (2 4 3 7 5)
nil
cljs꞉user꞉> 
